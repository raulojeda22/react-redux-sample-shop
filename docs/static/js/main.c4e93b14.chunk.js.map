{"version":3,"sources":["components/Header/Header.js","components/Nothing/Nothing.js","constants/alert.constants.js","constants/duck.constants.js","constants/cart.constants.js","actions/alert.actions.js","reducers/index.js","reducers/alert.reducer.js","reducers/duck.reducer.js","reducers/cart.reducer.js","helpers/store.js","helpers/context.js","services/duck.service.js","services/cart.service.js","actions/duck.actions.js","actions/cart.actions.js","components/Duck/Duck.js","components/DuckList/DuckList.js","components/Home/Home.js","components/Cart/Cart.js","components/Checkout/Checkout.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","to","id","Nothing","style","textAlign","marginTop","marginBottom","Component","alertConstants","duckConstants","cartConstants","toast","configure","position","POSITION","BOTTOM_RIGHT","autoClose","alertActions","success","message","type","error","clear","rootReducer","combineReducers","alert","state","action","duck","getting","duckList","value","cart","console","log","cartList","loggerMiddleware","createLogger","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","undefined","applyMiddleware","thunkMiddleware","CartDefaultContext","React","createContext","duckService","list","Promise","resolve","ducks","JSON","parse","localStorage","getItem","setItem","stringify","cartService","get","add","duckId","checkCart","filter","parseInt","total","remove","order","name","address","cardNumber","duckActions","dispatch","then","failure","toString","cartActions","Duck","params","addToCart","bind","e","this","props","target","key","alt","width","height","src","image","price","onClick","defaultProps","actionCreators","connectedDuck","connect","DuckList","map","index","Home","connectedHome","Cart","removeFromCart","componentDidMount","componentWillUnmount","getCart","item","push","totalPrice","length","display","justifyContent","alignItems","marginRight","marginLeft","margin","context","contextType","connectedCart","Checkout","submitted","handleChange","handleSubmit","setState","preventDefault","history","onSubmit","placeholder","onChange","connectedCheckout","App","Provider","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c4e93b14.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Header.css';\n\n/**\n * Component without using the the word class\n */\nfunction Header() {\n    return (\n        <header className=\"header\">\n            <h1><Link to=\"/\">Patotienda</Link></h1>\n            <ul id=\"nav\">\n                <li><h2><Link to=\"/\">Home</Link></h2></li>\n                <li><h2><Link to=\"/cart\">Cart</Link></h2></li>\n            </ul>\n        </header>\n    )\n}\n\nexport default Header;","import React, {Component} from 'react';\n\nclass Nothing extends Component {\n    render() {\n        return (\n            <div style={{textAlign: \"center\", marginTop: \"50px\"}}>\n                <h2 style={{marginBottom: \"50px\"}}>Nothing here</h2>\n            </div>\n        );\n    }\n}\n\nexport default Nothing;","export const alertConstants = {\n    SUCCESS: 'ALERT_SUCCESS',\n    ERROR: 'ALERT_ERROR',\n    CLEAR: 'ALERT_CLEAR'\n};","export const duckConstants = {\n    LIST_DUCK_REQUEST: 'LIST_DUCK_REQUEST',\n    LIST_DUCK_SUCCESS: 'LIST_DUCK_SUCCESS',\n    LIST_DUCK_FAILURE: 'LIST_DUCK_FAILURE',\n};","export const cartConstants = {\n    ADD_CART_REQUEST: 'ADD_CART_REQUEST',\n    ADD_CART_SUCCESS: 'ADD_CART_SUCCESS',\n    ADD_CART_FAILURE: 'ADD_CART_FAILURE',\n    REMOVE_CART_REQUEST: 'REMOVE_CART_REQUEST',\n    REMOVE_CART_SUCCESS: 'REMOVE_CART_SUCCESS',\n    REMOVE_CART_FAILURE: 'REMOVE_CART_FAILURE',\n    GET_CART_REQUEST: 'GET_CART_REQUEST',\n    GET_CART_SUCCESS: 'GET_CART_SUCCESS',\n    GET_CART_FAILURE: 'GET_CART_FAILURE',\n    ORDER_CART_REQUEST: 'ORDER_CART_REQUEST',\n    ORDER_CART_SUCCESS: 'ORDER_CART_SUCCESS',\n    ORDER_CART_FAILURE: 'ORDER_CART_FAILURE',\n};","import { alertConstants } from '../constants';\nimport { toast } from 'react-toastify';\n\n/**\n * Configura el toaster\n */\ntoast.configure({\n    position: toast.POSITION.BOTTOM_RIGHT,\n    autoClose: 1500\n});\n\nexport const alertActions = {\n    success,\n    error,\n    clear\n};\n\n/**\n * Mostra el missatge argumentat en un toaster positiu\n *\n * @param {string} message\n */\nfunction success(message) {\n    toast.success(message);\n    return { type: alertConstants.SUCCESS, message };\n}\n\n/**\n * Mostra el missatge argumentat en un toaster negatiu\n *\n * @param {string} message\n */\nfunction error(message) {\n    toast.error(message);\n    return { type: alertConstants.ERROR, message };\n}\n\n/**\n * S'utilitzaria per a netejar les alertes\n */\nfunction clear() {\n    return { type: alertConstants.CLEAR };\n}","import { combineReducers } from 'redux';\nimport { duck } from './duck.reducer';\nimport { alert } from './alert.reducer';\nimport { cart } from './cart.reducer';\n\nconst rootReducer = combineReducers({\n    alert,\n    duck,\n    cart\n});\n\nexport default rootReducer;","import { alertConstants } from '../constants';\n\nexport function alert(state = {}, action) {\n  switch (action.type) {\n    case alertConstants.SUCCESS:\n      return {\n        ...state,\n        type: 'alert-success',\n        message: action.message\n      };\n    case alertConstants.ERROR:\n      return {\n        ...state,\n        type: 'alert-danger',\n        message: action.message\n      };\n    case alertConstants.CLEAR:\n      return state;\n    default:\n      return state\n  }\n}","import { duckConstants } from '../constants';\n\nexport function duck(state = {}, action) {\n    switch (action.type) {\n        case duckConstants.LIST_DUCK_REQUEST:\n            return { ...state, getting: true};\n        case duckConstants.LIST_DUCK_SUCCESS:\n            return {\n                ...state,\n                getting: false,\n                duckList: action.value\n            };\n        case duckConstants.LIST_DUCK_FAILURE:\n            return state;\n      default:\n        return state\n    }\n  }","import { cartConstants } from '../constants';\n\nexport function cart(state = {}, action) {\n    switch (action.type) {\n        case cartConstants.GET_CART_REQUEST:\n            return { state };\n        case cartConstants.GET_CART_SUCCESS:\n            console.log(action.value);\n            return {\n                ...state,\n                cartList: action.value\n            };\n        case cartConstants.GET_CART_FAILURE:\n            return state;\n      default:\n        return state\n    }\n  }","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport rootReducer from '../reducers';\n\nconst loggerMiddleware = createLogger();\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\nexport const store = createStore(\n    rootReducer,undefined,composeEnhancers(applyMiddleware(\n        thunkMiddleware,\n        loggerMiddleware\n    ))\n);","import React from 'react';\nexport const CartDefaultContext = React.createContext(\"Empty\");","import { ducks } from '../helpers';\n\nexport const duckService = {\n    list\n};\n\nfunction list() {\n    return Promise.resolve(ducks);\n}\n","let cart = JSON.parse(localStorage.getItem('cart'));\nlet ducks = JSON.parse(localStorage.getItem('ducks'));\nif (!cart) {\n    localStorage.setItem('cart',JSON.stringify({}));\n    cart = {};\n}\nexport const cartService = {\n    get,\n    add,\n    remove,\n    order\n};\n\nfunction checkCart() {\n    if (!cart) {\n        JSON.parse(localStorage.getItem('cart'));\n    }\n    if (!ducks) {\n        ducks = JSON.parse(localStorage.getItem('ducks'));\n    }\n}\n\nfunction get() {\n    return Promise.resolve(cart);\n}\n\nfunction add(duckId) {\n    checkCart();\n    if (cart[duckId] == null) {\n        cart[duckId] = ducks.filter(duck => {\n            return duck.id === parseInt(duckId);\n        })[0];\n        cart[duckId].total = 1;\n    } else {\n        cart[duckId].total++;\n    }\n    localStorage.setItem('cart', JSON.stringify(cart));\n    return Promise.resolve(duckId);\n}\n\nfunction remove(duckId) {\n    checkCart();\n    if (cart[duckId] !== null && cart[duckId].total !== 0) {\n        cart[duckId].total--;\n        if (cart[duckId].total === 0) {\n            delete cart[duckId];\n        }\n    }\n    localStorage.setItem('cart', JSON.stringify(cart));\n    return Promise.resolve(duckId);\n}\n\nfunction order(name, address, cardNumber) {\n    cart = {};\n    localStorage.setItem('cart', JSON.stringify(cart));\n    return Promise.resolve({name, address, cardNumber});\n}","import { duckConstants } from '../constants';\nimport { duckService } from '../services';\nimport { alertActions } from './';\n\nexport const duckActions = {\n    list\n};\n\n/**\n * Gets the list of ducks\n */\nfunction list() {\n    return dispatch => {\n        dispatch(request());\n\n        duckService.list()\n            .then(\n                value => {\n                    dispatch(success(value));\n                    dispatch(alertActions.success(\"Duck list received\"))\n                },\n                error => {\n                    console.log(error);\n                    dispatch(failure(error.toString()));\n                    dispatch(alertActions.error(error.toString()));\n                }\n            );\n    };\n\n    function request(value) { return { type: duckConstants.LIST_DUCK_REQUEST, value } }\n    function success(value) { return { type: duckConstants.LIST_DUCK_SUCCESS, value } }\n    function failure(error) { return { type: duckConstants.LIST_DUCK_FAILURE, error } }\n}","import { cartConstants } from '../constants';\nimport { cartService } from '../services';\nimport { alertActions } from './';\n\nexport const cartActions = {\n    add,\n    remove,\n    get,\n    order\n};\n\n/**\n * Adds a duck to the cart by Id\n *\n * @param {int} duckId\n */\nfunction add(duckId) {\n    return dispatch => {\n        dispatch(request(duckId));\n\n        cartService.add(duckId)\n            .then(\n                value => {\n                    dispatch(success(value));\n                    dispatch(alertActions.success(\"Duck added\"))\n                },\n                error => {\n                    console.log(error);\n                    dispatch(failure(error.toString()));\n                    dispatch(alertActions.error(error.toString()));\n                }\n            );\n    };\n\n    function request(value) { return { type: cartConstants.ADD_CART_REQUEST, value } }\n    function success(value) { return { type: cartConstants.ADD_CART_SUCCESS, value } }\n    function failure(error) { return { type: cartConstants.ADD_CART_FAILURE, error } }\n}\n\n/**\n * Removes a duck from the cart by Id\n *\n * @param {int} duckId\n */\nfunction remove(duckId) {\n    return dispatch => {\n        dispatch(request(duckId));\n\n        cartService.remove(duckId)\n            .then(\n                value => {\n                    dispatch(success(value));\n                    dispatch(alertActions.success(\"Duck removed\"))\n                },\n                error => {\n                    console.log(error);\n                    dispatch(failure(error.toString()));\n                    dispatch(alertActions.error(error.toString()));\n                }\n            );\n    };\n\n    function request(value) { return { type: cartConstants.REMOVE_CART_REQUEST, value } }\n    function success(value) { return { type: cartConstants.REMOVE_CART_SUCCESS, value } }\n    function failure(error) { return { type: cartConstants.REMOVE_CART_FAILURE, error } }\n}\n\n/**\n * Gets the content of the cart\n */\nfunction get() {\n    return dispatch => {\n        dispatch(request());\n\n        cartService.get()\n            .then(\n                value => {\n                    console.log(value);\n                    dispatch(success(value));\n                    dispatch(alertActions.success(\"Cart retrieved\"))\n                },\n                error => {\n                    console.log(error);\n                    dispatch(failure(error.toString()));\n                    dispatch(alertActions.error(error.toString()));\n                }\n            );\n    };\n\n    function request(value) { return { type: cartConstants.GET_CART_REQUEST, value } }\n    function success(value) { return { type: cartConstants.GET_CART_SUCCESS, value } }\n    function failure(error) { return { type: cartConstants.GET_CART_FAILURE, error } }\n}\n\n/**\n * Creates an order with the content of the cart\n *\n * @param {string} name\n * @param {string} address\n * @param {string} cardNumber\n */\nfunction order(name, address, cardNumber) {\n    return dispatch => {\n        dispatch(request({name, address, cardNumber}));\n\n        cartService.order(name, address, cardNumber)\n            .then(\n                value => {\n                    console.log(value);\n                    dispatch(success(value));\n                    dispatch(alertActions.success(\"Ducks ordered\"))\n                },\n                error => {\n                    console.log(error);\n                    dispatch(failure(error.toString()));\n                    dispatch(alertActions.error(error.toString()));\n                }\n            );\n    };\n\n    function request(value) { return { type: cartConstants.ORDER_CART_REQUEST, value } }\n    function success(value) { return { type: cartConstants.ORDER_CART_SUCCESS, value } }\n    function failure(error) { return { type: cartConstants.ORDER_CART_FAILURE, error } }\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './Duck.css';\nimport { cartActions } from '../../actions';\nimport PropTypes from 'prop-types';\n\nclass Duck extends Component {\n    constructor(params) {\n        super(params);\n        this.addToCart = this.addToCart.bind(this);\n    }\n    addToCart(e) {\n        this.props.addToCart(e.target.value);\n    }\n    render() {\n        let duck = this.props.duck;\n        return (\n            <div className=\"duck\" key={duck.id}>\n                <div className=\"image\">\n                    <img alt={duck.name} width=\"250px\" height=\"250px\" src={\"/images/\" + duck.image}></img>\n                </div>\n                <div className=\"info\">\n                    <div className=\"data\">\n                        <h4>{duck.name}</h4>\n                        <h3>{duck.price}<small><sup>€</sup></small></h3>\n                    </div>\n                    <div className=\"actions\">\n                        <button value={duck.id} onClick={(e) => this.addToCart(e)}>Cart</button> {/* Different types of calls to events */}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n/**\n * Default values on properties\n */\nDuck.defaultProps = {\n    duck: {\n        id: 0,\n        name: 'Duck',\n        image: 'duckyJr.jpeg',\n        price: 100\n    }\n};\n/**\n * Restrictions to properties\n */\nDuck.propTypes = {\n    duck: PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        name: PropTypes.string.isRequired,\n        image: PropTypes.string.isRequired,\n        price: PropTypes.number.isRequired\n    }).isRequired\n}\n\nfunction mapState(state) {\n    const { alert } = state;\n    return { alert };\n}\n\nconst actionCreators = {\n    addToCart: cartActions.add\n};\n\nconst connectedDuck = connect(mapState, actionCreators)(Duck)\nexport default connectedDuck;","import React, { Component } from 'react';\nimport Duck from '../Duck/Duck.js';\nimport './DuckList.css';\n\nclass DuckList extends Component {\n    render() {\n        return (\n            <div id=\"duckList\">\n                { this.props.duckList && this.props.duckList.map((duck, index) => // Only goes through each duck on the list if the list isn't undefined\n                    <Duck key={index} duck={duck} /> //Use of props\n                )}\n            </div>\n        )\n    }\n}\n\nexport default DuckList;","import React, { Component } from 'react';\nimport { duckActions } from '../../actions';\nimport { connect } from 'react-redux';\nimport DuckList from '../DuckList/DuckList';\n\nclass Home extends Component {\n    constructor(params) {\n        super(params);\n        this.props.list();\n    }\n    render() {\n        return (\n            <div id=\"content\">\n                <DuckList duckList={this.props.duckList} />\n            </div>\n        )\n    }\n}\n\nfunction mapState(state) {\n    const { alert, duck } = state;\n    const { list } = duck;\n    const { duckList } = state.duck;\n    return { alert, list, duckList };\n}\n\nconst actionCreators = {\n    list: duckActions.list\n};\n\n\nconst connectedHome = connect(mapState, actionCreators)(Home)\nexport default connectedHome;\n","import React, { Component } from 'react';\nimport { cartActions, alertActions } from '../../actions';\nimport { connect } from 'react-redux';\nimport { CartDefaultContext } from '../../helpers';\nimport './Cart.css';\nimport { Link } from \"react-router-dom\";\n\nclass Cart extends Component {\n    constructor(params) {\n        super(params);\n        this.addToCart = this.addToCart.bind(this);\n        this.removeFromCart = this.removeFromCart.bind(this);\n        this.componentDidMount = this.componentDidMount.bind(this);\n        this.componentWillUnmount = this.componentWillUnmount.bind(this);\n        this.props.getCart();\n    }\n    static contextType = CartDefaultContext; //React context\n    /**\n     * Lifecycle method. Displays an alert when the component mounts\n     */\n    componentDidMount() {\n        this.props.success(\"Cart Component Did Mount\");\n    }\n    /**\n     * Lifecycle method. Displays an alert when the component unmounts\n     */\n    componentWillUnmount() {\n        this.props.success(\"Cart Component Will Unmount\");\n    }\n    /**\n     * Adds element to cart\n     *\n     * @param {event} e\n     */\n    addToCart(e) {\n        this.props.addToCart(e.target.value);\n    }\n    /**\n     * Removes element from cart\n     * @param {event} e\n     */\n    removeFromCart(e) {\n        this.props.removeFromCart(e.target.value);\n    }\n    render() {\n        console.log(this.props.cartList);\n        let cartList = [];\n        for (let item in this.props.cartList) {\n            cartList.push(this.props.cartList[item]); //Creates an array from the cartList elements to be able to map through it\n        }\n        let totalPrice = 0;\n        return (\n            <div id=\"cart\">\n                <div style={{marginTop: \"50px\", marginBottom: \"20px\"}} className=\"items\"> {/* Css on different components using the style attribute */}\n                { cartList.length > 0 && cartList.map((item, index) => /* map on the render */\n                    <div className=\"item\" key={index}>\n                        <div className=\"image\"><img alt={item.name} width=\"50px\" height=\"50px\" src={\"/images/\" + item.image}></img></div>\n                        <div className=\"name\">{item.name}</div>\n                        <div className=\"price\">{item.price}<small><sup>€</sup></small></div>\n                        <div style={{display: \"flex\", justifyContent: \"end\", alignItems: \"center\"}}className=\"total\"><button style={{marginRight: \"0.5em\"}} className=\"remove\" value={item.id} onClick={this.removeFromCart}>-</button>{item.total}<button style={{marginLeft: \"0.5em\"}} value={item.id} onClick={this.addToCart}>+</button></div>\n                        <div className=\"totalPrice\">{item.total * item.price}<small><sup>€</sup></small></div>\n                        <div style={{display: \"none\"}}>{totalPrice += item.total * item.price}</div>\n                    </div>\n                )}\n                </div>\n                { cartList.length > 0 && (\n                    <div style={{marginBottom: \"50px\"}} className=\"result\">\n                        <div style={{marginRight: \"20px\"}}>Total <span>{totalPrice}<small><sup>€</sup></small></span></div>\n                        <Link to=\"/checkout\"><button>Checkout</button></Link>\n                    </div>\n                )}\n                {\n                    cartList.length <= 0 && <h2 style={{margin: \"0 auto\"}}>{this.context}</h2> //Context usage for displaying the word empty when there aren't no elements on the cart\n                }\n            </div>\n        )\n    }\n}\n\nfunction mapState(state) {\n    const { alert, cart } = state;\n    const { cartList } = cart;\n    return { alert, cartList };\n}\n\nconst actionCreators = {\n    addToCart: cartActions.add,\n    removeFromCart: cartActions.remove,\n    getCart: cartActions.get,\n    success: alertActions.success\n};\n\nconst connectedCart = connect(mapState, actionCreators)(Cart)\nexport default connectedCart;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { cartActions } from '../../actions';\n\nclass Checkout extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { //Usage of the state for the form\n            name: '',\n            address: '',\n            cardNumber: '',\n            submitted: false\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    handleChange(e) {\n        const { name, value } = e.target;\n        this.setState({ [name]: value});\n    }\n    handleSubmit(e) {\n        e.preventDefault();\n        this.setState({submitted: true});\n        const { name, address, cardNumber } = this.state;\n        if (name && address && cardNumber) {\n            this.props.order(name, address, cardNumber);\n            this.props.history.push('/');\n        }\n    }\n    render() {\n        console.log(this.props.history);\n        const { name, address, cardNumber, submitted } = this.state;\n        return (\n            <div id=\"checkout\">\n                <h2 style={{textAlign: \"center\"}}>Checkout</h2>\n                <form style={{textAlign: \"center\"}} onSubmit={this.handleSubmit}> {/* Form on the checkout */}\n                    <div className=\"name\">\n                        <input type=\"text\" placeholder=\"Name\" name=\"name\" value={name} onChange={this.handleChange} />\n                        {submitted && !name &&\n                            <div className=\"error\">Name is required</div>\n                        }\n                    </div>\n                    <div className=\"address\">\n                        <input type=\"text\" placeholder=\"Address\" name=\"address\" value={address} onChange={this.handleChange} />\n                        {submitted && !address &&\n                            <div className=\"error\">Address is required</div>\n                        }\n                    </div>\n                    <div className=\"cardNumber\">\n                        <input type=\"text\" placeholder=\"Card number\" name=\"cardNumber\" value={cardNumber} onChange={this.handleChange} />\n                        {submitted && !cardNumber &&\n                            <div className=\"error\">Card number is required</div>\n                        }\n                    </div>\n                    <button>Buy</button>\n                </form>\n            </div>\n        );\n    }\n}\nfunction mapState(state) {\n    return state;\n}\n\nconst actionCreators = {\n    order: cartActions.order,\n};\n\nconst connectedCheckout = connect(mapState, actionCreators)(Checkout);\nexport default connectedCheckout;","import React, {Component} from 'react';\nimport './App.css';\nimport { Route, Switch } from \"react-router-dom\";\nimport Header from './components/Header/Header';\nimport Nothing from './components/Nothing/Nothing.js';\nimport Home from './components/Home/Home.js';\nimport Cart from './components/Cart/Cart.js';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { CartDefaultContext } from './helpers';\nimport Checkout from './components/Checkout/Checkout.js';\n\n/**\n * Main application\n */\nclass App extends Component {\n  render() {\n    console.log(this.props.duckList);\n    return (\n      <div>\n        <Header />\n        <CartDefaultContext.Provider value=\"Empty\"> {/* Context provider */}\n          <Switch>\n            <Route exact path=\"/\" component={Home}></Route>\n              <Route exact path=\"/cart\" component={Cart}></Route>\n            <Route exact path=\"/checkout\" component={Checkout}></Route>\n            <Route component={Nothing} />\n          </Switch>\n        </CartDefaultContext.Provider>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport App from './App';\nimport { store } from './helpers';\nimport * as serviceWorker from './serviceWorker';\nimport { ducks } from './helpers';\n\nif (!JSON.parse(localStorage.getItem('ducks'))) {\n    localStorage.setItem('ducks',JSON.stringify(ducks));\n}\n\nReactDOM.render(<Provider store={store}><Router><App/></Router></Provider>, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}